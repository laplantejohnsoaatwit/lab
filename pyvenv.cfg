#home = C:\Users\laplantejohnsoa\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.8_qbz5n2kfra8p0
#include-system-site-packages = false
#version = 3.8.10
#!/usr/bin/env python
#
#
#
#
#

# documentation string of this module
"""
Minimal pygame program.
"""
# some informational variables
__author__    = "$Author: DR0ID $"
__version__   = "$Revision: 109 $"
__date__      = "$Date: 2007-04-03 18:00:40 +0200 (Di, 03 Apr 2007) $"
__license__   = ''
__copyright__ = "DR0ID (c) 2007   http://mypage.bluewin.ch/DR0ID"

#----------------------------- actual code --------------------------------

# import the pygame module, so you can use it
import pygame
from Paddle import Paddle
from Ball import Ball
from collections import namedtuple

# define a main function
def main():
    
    # initialize the pygame module
    pygame.init()
    pygame.display.set_caption("my pong")
    WIDTH= 800
    HEIGHT = 400
    BORDER = 15
    VELOCITY = 5
    FPS = 60

    MyConstants = namedtuple("MyConstants", ["WIDTH", "HEIGHT", "BORDER", "VELOCITY", "FPS"])
    #vs List: IMMUTABLE
    CONSTS = MyConstants(WIDTH, HEIGHT, BORDER, VELOCITY, FPS)


    screen = pygame.display.set_mode((WIDTH, HEIGHT))
    screen.fill((0,0,0))
    pygame.display.update() 
    # load and set the logo
    # logo = pygame.image.load("logo32x32.png")
    #pygame.display.set_icon(logo)
   

    
    # create a surface on screen that has the size of 240 x 180
   # screen = pygame.display.set_mode((240,180))
    #screen.fill((0,0,0))
    #pygame.display.update() 
    # define a variable to control the main loop
    

    #altered original code to match code in tutorial videos

    wcolor=pygame.Color("white")
    bgcolor=pygame.Color("black")
    bcolor = pygame.Color("yellow")
    pygame.draw.rect(screen,wcolor, pygame.Rect((0,0),(WIDTH, BORDER)))
    pygame.draw.rect(screen,wcolor, pygame.Rect((0,0),(BORDER, HEIGHT)))
    pygame.draw.rect(screen,wcolor, pygame.Rect((0,(HEIGHT-BORDER)),(WIDTH, BORDER)))

    #Ball init
    x0 = WIDTH - Ball.RADIUS
    y0 = HEIGHT // 2
    vx0 = -VELOCITY
    vy0 = -VELOCITY // 2  #-VELOCITY
    #+/- 45 degree/random


    b0 = Ball(x0,y0, vx0, vy0, screen, bcolor, bgcolor, CONSTS)
    b0.show(bcolor)

    pygame.display.update() 

    running = True
    clock = pygame.time.Clock()

    # main loop
    while running:
        # event handling, gets all event from the eventqueue
        for event in pygame.event.get():
            # only do something if the event if of type QUIT
            if event.type == pygame.QUIT:
                # change the value to False, to exit the main loop
                running = False
            pygame.display.update()
            clock.tick(FPS)

            #Ball
            b0.update()
            
# run the main function only if this module is executed as the main script
# (if you import this as a module then nothing is executed)
if __name__=="__main__":
    # call the main function
    main()

#push lab3.py to git + capture a gif and include it in README.md
